name: Publish

on:
  push:
    branches:
      - main
      - beta

jobs:
  publish:
    permissions:
      id-token: write
      deployments: write
      contents: write

    runs-on: ${{ matrix.os }}

    strategy:
      matrix:
        os: [macos-latest]

    steps:
      - name: Checkout git repo
        uses: actions/checkout@v3

      - name: Install Node and NPM
        uses: actions/setup-node@v3
        with:
          node-version: 20
          cache: npm

      - name: Install and build
        run: |
          npm install
          npm run postinstall
          npm run build

      - name: Publish releases
        env:
          # The APPLE_* values are used for auto updates signing
          # APPLE_APP_SPECIFIC_PASSWORD: ${{ secrets.APPLE_ID_PASS }}
          # APPLE_ID: ${{ secrets.APPLE_ID }}
          # APPLE_TEAM_ID: ${{ secrets.APPLE_TEAM_ID }}
          # CSC_LINK: ${{ secrets.CSC_LINK }}
          # CSC_KEY_PASSWORD: ${{ secrets.CSC_KEY_PASSWORD }}
          # This is used for uploading release assets to github
          GH_TOKEN: ${{ secrets.GITHUB_TOKEN }}
        run: |
          npm exec electron-builder -- --publish always --win --linux

      - name: Run semantic-release
        env:
          GITHUB_TOKEN: ${{ secrets.GITHUB_TOKEN }}
        run: npx semantic-release

      - name: Checkout
        uses: actions/checkout@v4

      - name: Semantic Release
        uses: cycjimmy/semantic-release-action@v4
        with:
          semantic_version: 16
          # you can set branches for semantic-release above v16.
          branches: |
            [
              '+([0-9])?(.{+([0-9]),x}).x',
              'master',
              'next',
              'next-major',
              {
                name: 'beta',
                prerelease: true
              },
              {
                name: 'alpha',
                prerelease: true
              }
            ]
        env:
          GITHUB_TOKEN: ${{ secrets.GITHUB_TOKEN }}
